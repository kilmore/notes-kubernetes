# POD Presets 

# Pod presets are a powerful option that let you inject configuration into PODs based on a label selector. 
# This means that PODs that share a common configuraiton need can inherit the configuration from a single source. 
# This is versus configuring each POD directly. 
# Below are two POD Presets and two POD configurations. Here we demonstrate that POD's can have configuration injected,
# have it be injected from more than one Preset. 
#
# Debugging-------
# -------------------------------------------------
# This is still an Alpha feature (as of 1.11)
# Validate Yaml configuration updated on deployed POD
#    kubectl get pod <PODName> -o yaml
# Debug POD 
#    kubectl describe pod <pod name>
# Validate POD Presets
#    kubectl get podpreset


# Here we create a config map. This config map will be used in one of the two Pod Presets Below
apiVersion: v1
kind: ConfigMap
metadata:
  name: etcd-env-config
data:
  number_of_members: "1"
  initial_cluster_state: new
  initial_cluster_token: DUMMY_ETCD_INITIAL_CLUSTER_TOKEN
  discovery_token: DUMMY_ETCD_DISCOVERY_TOKEN
  discovery_url: http://etcd_discovery:2379
  etcdctl_peers: http://etcd:2379
  duplicate_key: FROM_CONFIG_MAP
  REPLACE_ME: "a value"

--- 

# Here we defined some settings for front end web servers.
# it contains basic settings and settings from the config map
apiVersion: settings.k8s.io/v1alpha1
kind: PodPreset
metadata:
  name: allow-database
spec:
  selector:
    matchLabels:
      role: frontend
  env:
    - name: DB_PORT
      value: "6379"
    - name: duplicate_key
      value: FROM_ENV
    - name: expansion
      value: $(REPLACE_ME)
  envFrom:
    - configMapRef:
        name: etcd-env-config
  volumeMounts:
    - mountPath: /cache
      name: cache-volume
    - mountPath: /etc/app/config.json
      readOnly: true
      name: secret-volume
  volumes:
    - name: cache-volume
      emptyDir: {}
    - name: secret-volume
      secret:
         secretName: config-details

---
# This is a second 
apiVersion: settings.k8s.io/v1alpha1
kind: PodPreset
metadata:
  name: proxy
spec:
  selector:
    matchLabels:
      app: guestbook
  volumeMounts:
    - mountPath: /etc/proxy/configs
      name: proxy-volume
  volumes:
    - name: proxy-volume
      emptyDir: {}

---
# This example creates an nginx server 
# It should only have one POD preset attached. 
apiVersion: v1
kind: Pod
metadata:
  name: website
  labels:
    app: website
    role: frontend
spec:
  containers:
    - name: website
      image: nginx
      ports:
        - containerPort: 80

---
# This creates 3 php redis servers.
# It should have both PodPresets attached.
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: frontend
  app: guestbook
spec:
  replicas: 3
  selector:
    matchLabels:
      role: frontend
    matchExpressions:
      - {key: role, operator: In, values: [frontend]}
  template:
    metadata:
      labels:
        app: guestbook
        role: frontend
    spec:
      containers:
      - name: php-redis
        image: gcr.io/google_samples/gb-frontend:v3
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        env:
          - name: GET_HOSTS_FROM
            value: dns
        ports:
          - containerPort: 80